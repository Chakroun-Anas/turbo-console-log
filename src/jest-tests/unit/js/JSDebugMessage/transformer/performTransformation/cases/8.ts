// Vue SFC - dual scripts with arrow function in setup script (second script) needing transformation
export default {
  name: 'Vue SFC - dual scripts with arrow function in setup script (second script) needing transformation',
  fileExtension: '.vue',
  lines: [
    '<template>',
    '  <div>{{ filteredItems }}</div>',
    '</template>',
    '',
    '<!-- Regular script: Options API -->',
    '<script lang="ts">',
    'export default {',
    '  data() {',
    '    return {',
    '      title: "My Component"',
    '    };',
    '  },',
    '  mounted() {',
    '    console.log("Component mounted");',
    '  }',
    '};',
    '</script>',
    '',
    '<!-- Setup script: Composition API -->',
    '<script setup lang="ts">',
    "import { ref, computed } from 'vue';",
    '',
    "const items = ref(['apple', 'banana', 'cherry', 'date']);",
    'const filteredItems = computed(() => {',
    '  return items.value.filter(fruit => fruit.startsWith("a"));',
    '});',
    '</script>',
    '',
    '<style scoped>',
    'div { color: green; }',
    '</style>',
  ],
  selectedVar: 'fruit',
  line: 24,
  debuggingMsg: 'console.log("ðŸš€ ~ fruit:", fruit)',
  expected: [
    '<template>',
    '  <div>{{ filteredItems }}</div>',
    '</template>',
    '',
    '<!-- Regular script: Options API -->',
    '<script lang="ts">',
    'export default {',
    '  data() {',
    '    return {',
    '      title: "My Component"',
    '    };',
    '  },',
    '  mounted() {',
    '    console.log("Component mounted");',
    '  }',
    '};',
    '</script>',
    '',
    '<!-- Setup script: Composition API -->',
    '<script setup lang="ts">',
    "import { ref, computed } from 'vue';",
    '',
    "const items = ref(['apple', 'banana', 'cherry', 'date']);",
    'const filteredItems = computed(() => {',
    '  return items.value.filter(fruit => {',
    '    console.log("ðŸš€ ~ fruit:", fruit);',
    '    return fruit.startsWith("a");',
    '  });',
    '});',
    '</script>',
    '',
    '<style scoped>',
    'div { color: green; }',
    '</style>',
  ],
};
