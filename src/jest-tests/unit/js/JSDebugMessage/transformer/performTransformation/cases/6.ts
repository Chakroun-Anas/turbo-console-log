// Vue SFC - dual scripts with arrow function parameter needing transformation (setup script)
export default {
  name: 'Vue SFC - dual scripts with arrow function parameter needing transformation',
  fileExtension: '.vue',
  lines: [
    '<template>',
    '  <div>{{ totalLength }}</div>',
    '</template>',
    '',
    '<!-- Regular script -->',
    '<script lang="ts">',
    'export default {',
    '  data() {',
    "    const someArray = ['apple', 'banana', 'cherry'];",
    '    const someVar = someArray.map(item => item.length);',
    '',
    '    return { someVar };',
    '  },',
    '};',
    '</script>',
    '',
    '<!-- Setup script -->',
    '<script setup lang="ts">',
    "const someArray = ['dog', 'cat', 'fish'];",
    'const someVar = someArray.map(item => item.length);',
    '',
    'const totalLength = someVar.reduce((a, b) => a + b, 0);',
    '</script>',
    '',
    '<style scoped>',
    'div { font-family: sans-serif; }',
    '</style>',
  ],
  selectedVar: 'item',
  line: 19,
  debuggingMsg: 'console.log("ðŸš€ ~ item:", item)',
  expected: [
    '<template>',
    '  <div>{{ totalLength }}</div>',
    '</template>',
    '',
    '<!-- Regular script -->',
    '<script lang="ts">',
    'export default {',
    '  data() {',
    "    const someArray = ['apple', 'banana', 'cherry'];",
    '    const someVar = someArray.map(item => item.length);',
    '',
    '    return { someVar };',
    '  },',
    '};',
    '</script>',
    '',
    '<!-- Setup script -->',
    '<script setup lang="ts">',
    "const someArray = ['dog', 'cat', 'fish'];",
    'const someVar = someArray.map(item => {',
    '  console.log("ðŸš€ ~ item:", item);',
    '  return item.length;',
    '});',
    '',
    'const totalLength = someVar.reduce((a, b) => a + b, 0);',
    '</script>',
    '',
    '<style scoped>',
    'div { font-family: sans-serif; }',
    '</style>',
  ],
};
