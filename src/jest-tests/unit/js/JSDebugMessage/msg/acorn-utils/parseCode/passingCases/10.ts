export default {
  name: 'Simple NestJS application with decorators and DI',
  sourceCode: [
    '// File: simple-nest.ts',
    "import { Controller, Get, Post, Param, Body, Injectable, Module } from '@nestjs/common';",
    '',
    '// ---- DTOs ----',
    'class CreateItemDto {',
    '  name!: string;',
    '  description?: string | null;',
    '}',
    '',
    '// ---- Service ----',
    '@Injectable()',
    'class ItemsService {',
    '  private items: Array<{ id: string; name: string; description?: string | null }> = [];',
    '',
    '  findAll() {',
    '    return this.items;',
    '  }',
    '',
    '  create(dto: CreateItemDto) {',
    '    const id = String(this.items.length + 1);',
    '    const item = { id, name: dto.name, description: dto.description ?? null };',
    '    this.items.push(item);',
    '    return item;',
    '  }',
    '',
    '  findOne(id: string) {',
    '    return this.items.find((i) => i.id === id) ?? null;',
    '  }',
    '}',
    '',
    '// ---- Controller ----',
    "@Controller('items')",
    'class ItemsController {',
    '  constructor(private readonly svc: ItemsService) {}',
    '',
    '  @Get()',
    '  getAll() {',
    '    return this.svc.findAll();',
    '  }',
    '',
    "  @Get(':id')",
    "  getOne(@Param('id') id: string) {",
    '    return this.svc.findOne(id);',
    '  }',
    '',
    '  @Post()',
    '  add(@Body() body: CreateItemDto) {',
    '    return this.svc.create(body);',
    '  }',
    '}',
    '',
    '// ---- Module ----',
    '@Module({',
    '  controllers: [ItemsController],',
    '  providers: [ItemsService],',
    '})',
    'export class AppModule {}',
  ],
};
